<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="member.dtd">
	<!-- 아이디 오름차순으로 나열된 회원객체를 리스트로 반환 -->
	<select id="list" resultType="member">
		SELECT * FROM member ORDER BY id
	</select>
	<!-- 이메일을 받아서 회원객체를 반환 -->
	<select id="selectByEmail" parameterType="String"
		resultType="member">
		SELECT * FROM member WHERE email=#{email}
	</select>
	<!-- 회원 객체를 받아서 등록 -->
	<insert id="insert" parameterType="member">
		INSERT INTO member (id, email, password, name, regDate)
		VALUES
		(member_seq.NEXTVAL, #{email}, #{password}, #{name}, #{regDate})
		<selectKey keyProperty="id" resultType="Long">
			SELECT NVL(MAX(id),
			0) FROM member
		</selectKey>
	</insert>
	<!-- 이메일을 받아서 회원 이름, 비밀번호 변경 -->
	<update id="update" parameterType="member">
		UPDATE member SET
		name=#{name}, password=#{password} WHERE email=#{email}
	</update>
	<!-- 이메일과 비밀번호를 받아서 회원객체 삭제 -->
	<delete id="delete" parameterType="member">
		DELETE FROM member WHERE
		email=#{email} AND password=#{password}
	</delete>
	<!-- 모든 회원객체 삭제 -->
	<delete id="deleteAll">
		DELETE FROM MEMBER
	</delete>
	<!-- 모든 회원객체 수 정수형으로 반환 -->
	<select id="count" resultType="Integer">
		SELECT COUNT(*) FROM member
	</select>
	<!-- 등록일자 범위를 받아서 내림차순으로 회원객체 반환 -->
	<select id="selectByRegdate" parameterType="HashMap"
		resultType="member">
		SELECT * FROM member WHERE regDate BETWEEN #{from} AND
		#{to} ORDER BY regDate DESC
	</select>
	<!-- 아이디를 받아서 해당하는 회원객체 반환 -->
	<select id="selectById" parameterType="Long" resultType="member">
		SELECT *
		FROM member WHERE id=#{id}
	</select>

</mapper>